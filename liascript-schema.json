{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "LiaScript Document",
  "type": "object",
  "properties": {
    "meta": {
      "type": "object",
      "properties": {
        "author": { "type": "string" },
        "email": { "type": "string" },
        "language": { "type": "string" },
        "mode": { "type": "string" },
        "dark": { "type": "boolean" },
        "narrator": { "type": "string" }
      },
      "additionalProperties": true
    },
    "sections": {
      "type": "array",
      "items": { "$ref": "#/definitions/section" }
    }
  },
  "required": ["sections"],
  "definitions": {
    "section": {
      "type": "object",
      "properties": {
        "title": { "type": "string" },
        "indent": { "type": "integer", "minimum": 1, "maximum": 6 },
        "body": { "$ref": "#/definitions/Blocks" },
        "meta": { "type": "object" }
      },
      "required": ["title", "indent", "body"]
    },

    "StringOrList": {
      "oneOf": [
        { "type": "string" },
        {
          "type": "array",
          "items": { "type": "string" },
          "description": "Each string represents a line; all lines will be joined with a newline separator."
        }
      ]
    },

    "Blocks": {
      "type": "array",
      "items": {
        "oneOf": [
          { "$ref": "#/definitions/Block" },
          { "$ref": "#/definitions/Inlines" }
        ]
      }
    },
    "Block": {
      "oneOf": [
        { "$ref": "#/definitions/ParagraphBlock" },
        { "$ref": "#/definitions/LineBlock" },
        { "$ref": "#/definitions/CommentBlock" },
        { "$ref": "#/definitions/EffectBlock" },
        { "$ref": "#/definitions/GalleryBlock" },
        { "$ref": "#/definitions/FormulaBlock" },
        { "$ref": "#/definitions/QuoteBlock" },
        { "$ref": "#/definitions/ListBlock" },
        { "$ref": "#/definitions/HtmlBlock" },
        { "$ref": "#/definitions/CodeBlock" },
        { "$ref": "#/definitions/TableBlock" }
      ]
    },

    "ParagraphBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "paragraph" },
        "body": { "$ref": "#/definitions/Inlines" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "A block element that displays its content as a paragraph. The 'body' can be a string, a single inline element, or an array of strings and inlines. Additional HTML attributes can be set via 'attr' for custom styling."
    },

    "LineBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "line" },
        "attr": { "type": "object" }
      },
      "required": ["type"],
      "description": "A horizontal line, corresponds to hr tag in html, can be styled via attr and has no body"
    },

    "CommentBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "comment" },
        "body": {
          "$ref": "#/definitions/Inlines",
          "description": "The content of the comment, which can be a string, a single inline element, or an array of strings and inlines. This text will be read aloud by the TTS engine at the specified animation step."
        },
        "start": {
          "type": "integer",
          "minimum": 0,
          "description": "The animation step at which this comment will be read aloud in Presentation or Slides mode."
        },
        "voice": {
          "$ref": "#/definitions/Voice",
          "description": "Overrides the default TTS voice for this comment. Optional."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "A comment is a paragraph that will be read aloud by the TTS engine at a specific animation step in Presentation or Slides mode. In Textbook mode, it is rendered as visible text. Comments are typically used to narrate or explain animation steps. If multiple comments share the same 'start' value, they are read together in order of appearance."
    },

    "EffectBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "effect" },
        "body": {
          "oneOf": [
            { "$ref": "#/definitions/Block" },
            { "$ref": "#/definitions/Blocks" }
          ],
          "description": "The content to animate. Can be a single block or an array of blocks."
        },
        "start": {
          "type": "integer",
          "minimum": 0,
          "description": "Step when the effect appears (optional)."
        },
        "stop": {
          "type": "integer",
          "description": "Step when the effect disappears, should only be defined in combination with start (optional)."
        },
        "playback": {
          "type": "boolean",
          "description": "If true, adds a TTS playback button (optional)."
        },
        "voice": {
          "$ref": "#/definitions/Voice",
          "description": "Specifies the TTS voice to use for playback. Only relevant if 'playback' is true. Overrides the default voice set at the document or section level (optional)."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "A block element that animates its content to appear and/or disappear at specific steps in a slide. Optionally, a TTS playback button can be added, and a custom voice can be set for spoken output."
    },

    "GalleryBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "gallery" },
        "body": {
          "type": "array",
          "items": { "$ref": "#/definitions/Multimedia" },
          "description": "An array of multimedia links (image, audio, video, or embed) to display in the gallery."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Displays a gallery of media elements. The body must be an array of multimedia links."
    },

    "FormulaBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "formula" },
        "body": {
          "oneOf": [
            { "type": "string" },
            {
              "type": "array",
              "items": { "type": "string" },
              "description": "Each string represents a line; all lines will be joined with a newline separator."
            }
          ],
          "description": "The formula content in KaTeX syntax. Can be a single string or an array of strings (for readability); if an array, lines are joined with newlines before rendering."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Displays a mathematical formula using KaTeX. The body can be a single string or an array of strings for multi-line formulas."
    },

    "QuoteBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "quote" },
        "body": {
          "oneOf": [
            { "$ref": "#/definitions/Block" },
            { "$ref": "#/definitions/Blocks" }
          ],
          "description": "The quoted content. Can be a single block or an array of blocks."
        },
        "by": {
          "$ref": "#/definitions/Inlines",
          "description": "Optional. If provided, displays the quote as a citation with the given author or source."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Displays a blockquote. The 'body' contains the quoted content (single block or array of blocks). If 'by' is set, the quote is rendered as a citation."
    },

    "ListBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "list" },
        "body": {
          "oneOf": [
            { "$ref": "#/definitions/Block" },
            { "$ref": "#/definitions/Blocks" }
          ],
          "description": "The quoted content. Can be a single block or an array of blocks."
        },
        "ordered": {
          "type": "boolean",
          "description": "Defines if it is an ordered or an unordered list, by default it is false."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Displays a blockquote. The 'body' contains the quoted content (single block or array of blocks). If 'by' is set, the quote is rendered as a citation."
    },

    "HtmlBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "html" },
        "htmlTag": {
          "type": "string",
          "description": "Define an inline html tag name like div, span, etc."
        },
        "body": {
          "oneOf": [
            { "$ref": "#/definitions/Block" },
            { "$ref": "#/definitions/Blocks" }
          ]
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "htmlTag", "body"],
      "description": "In contrast to an html inline element, this body can contain entire Block elements."
    },

    "CodeBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "code" },
        "title": { "type": "string", "description": "A filename" },
        "language": {
          "type": "string",
          "description": "This is a short code for the used syntax highlighting, such java, markdown, cpp, lua, prolog, etc."
        },
        "closed": {
          "type": "boolean",
          "description": "Defines if the content of the file shall be hidden at first, the user can decide to open it afterwards."
        },
        "body": { "$ref": "#/definitions/StringOrList" },
        "execute": {
          "$ref": "#/definitions/StringOrList",
          "description": "This optional property that makes the code block editable and executable. It contains JavaScript with an @input marker. This marker is replaced before the execution with the current content of the code-block."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "This will show an entire code block with syntax highlighting and an optional title. The execute field will turn the code-block into an editor with a run button that will execute the code."
    },

    "TableBlock": {
      "type": "object",
      "properties": {
        "type": { "const": "table" },
        "head": {
          "type": "array",
          "items": { "$ref": "#/definitions/Inlines" },
          "description": "Defines the table header. Each entry represents the content of a column header and can be a string, a single inline element, or an array of inlines."
        },
        "alignment": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["left", "right", "center"]
          },
          "description": "Specifies the alignment of each column: 'left', 'right', or 'center'. The number of entries must match the number of columns in the header. If omitted, all columns default to left alignment."
        },
        "body": {
          "type": "array",
          "items": {
            "type": "array",
            "items": { "$ref": "#/definitions/Inlines" }
          },
          "description": "Defines the table rows. Each row is an array of cells, and each cell can contain a string, a single inline element, or an array of inlines."
        },
        "attr": {
          "type": "object",
          "description": "Optional HTML attributes for custom styling or additional properties."
        }
      },
      "required": ["type", "head", "body"],
      "description": "Displays a table with a header, optional column alignment, and a body of rows. Each cell can contain rich inline content. Additional HTML attributes can be set via 'attr' for custom styling."
    },

    "Inlines": {
      "oneOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/Inline" }
        },
        { "$ref": "#/definitions/Inline" }
      ]
    },

    "Inline": {
      "oneOf": [
        { "$ref": "#/definitions/Bold" },
        { "$ref": "#/definitions/Italic" },
        { "$ref": "#/definitions/Strike" },

        { "$ref": "#/definitions/Sup" },
        { "$ref": "#/definitions/Underline" },
        { "$ref": "#/definitions/Effect" },
        { "$ref": "#/definitions/Html" },
        { "$ref": "#/definitions/Script" },
        { "$ref": "#/definitions/Code" },
        { "$ref": "#/definitions/Footnote" },
        { "$ref": "#/definitions/Formula" },
        { "$ref": "#/definitions/Symbol" },

        { "$ref": "#/definitions/String" },

        { "$ref": "#/definitions/Link" },
        { "$ref": "#/definitions/Multimedia" },

        { "$ref": "#/definitions/Input" },
        { "$ref": "#/definitions/Select" },

        { "type": "string" }
      ]
    },

    "Bold": {
      "type": "object",
      "properties": {
        "type": { "const": "bold" },
        "body": { "$ref": "#/definitions/Inlines" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "An inline element that displays its content in bold. --> __bold text__"
    },

    "Italic": {
      "type": "object",
      "properties": {
        "type": { "const": "italic" },
        "body": { "$ref": "#/definitions/Inlines" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Displays the contained elements in italic text. --> _italic text_"
    },

    "Strike": {
      "type": "object",
      "properties": {
        "type": { "const": "strike" },
        "body": { "$ref": "#/definitions/Inlines" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Displays the contained elements with a strikethrough (crossed out). --> ~striked text~"
    },

    "Sup": {
      "type": "object",
      "properties": {
        "type": { "const": "sup" },
        "body": { "$ref": "#/definitions/Inlines" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Displays the contained elements as superscript (raised text). --> ^bold text^"
    },

    "Underline": {
      "type": "object",
      "properties": {
        "type": { "const": "underline" },
        "body": { "$ref": "#/definitions/Inlines" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Displays the contained elements with an underline. --> ~~underlined text~~"
    },

    "Html": {
      "type": "object",
      "properties": {
        "type": { "const": "html" },
        "htmlTag": {
          "type": "string",
          "description": "Define an inline html tag name like div, span, etc."
        },
        "body": { "$ref": "#/definitions/Inlines" },
        "attr": { "type": "object" }
      },
      "required": ["type", "htmlTag"],
      "description": "Displays an inline HTML element that might contain further inline elements, parameters are defined in attr."
    },

    "Script": {
      "type": "object",
      "properties": {
        "type": { "const": "script" },

        "body": {
          "oneOf": [
            { "type": "string" },
            {
              "type": "array",
              "items": { "type": "string" },
              "description": "Each string represents a line; all lines will be joined with a newline separator."
            }
          ]
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Create a script tag with code from the body. The body can be a single string or an array of strings (joined with newlines for readability)."
    },

    "Code": {
      "type": "object",
      "properties": {
        "type": { "const": "code" },

        "body": { "type": "string" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Display a verbatim element, the body will be displayed as it is."
    },

    "Footnote": {
      "type": "object",
      "properties": {
        "type": { "const": "footnote" },
        "body": { "type": "string" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Add a reference to a footnote block element."
    },

    "Formula": {
      "type": "object",
      "properties": {
        "type": { "const": "formula" },
        "body": { "type": "string" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Use KaTeX formatted formulas in the string."
    },

    "String": {
      "type": "object",
      "properties": {
        "type": { "const": "formula" },
        "body": { "type": "string" },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "A string tagged element, as an alternative for applying string directly."
    },

    "Effect": {
      "type": "object",
      "properties": {
        "type": { "const": "effect" },
        "body": { "$ref": "#/definitions/Inlines" },
        "start": {
          "type": "integer",
          "minimum": 0,
          "description": "Step when the effect appears (optional)."
        },
        "stop": {
          "type": "integer",
          "description": "Step when the effect disappears, should only be defined in combination with start (optional)."
        },
        "playback": {
          "type": "boolean",
          "description": "If true, adds a TTS playback button (optional)."
        },
        "voice": {
          "$ref": "#/definitions/Voice",
          "description": "Specifies the TTS voice to use for playback. Only relevant if 'playback' is true. Overrides the default voice set at the document or section level (optional)."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "An inline element that animates its content to appear and/or disappear at specific steps in a slide. Optionally, a TTS playback button can be added, and a custom voice can be set for spoken output."
    },

    "Link": {
      "type": "object",
      "properties": {
        "type": { "const": "link" },
        "linkType": { "const": "link" },

        "url": {
          "type": "string",
          "description": "The target URL for the hyperlink."
        },
        "alt": {
          "$ref": "#/definitions/Inlines",
          "description": "The link text. If omitted, the URL is shown."
        },
        "title": {
          "$ref": "#/definitions/Inlines",
          "description": "A title or tooltip for the link. Optional."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "linkType", "url"],
      "description": "Specifies a hyperlink"
    },

    "Multimedia": {
      "type": "object",
      "properties": {
        "type": { "const": "link" },
        "linkType": {
          "type": "string",
          "enum": ["image", "audio", "video", "embed"]
        },
        "alt": { "$ref": "#/definitions/Inlines" },
        "url": { "type": "string" },
        "title": { "$ref": "#/definitions/Inlines" }
      },
      "required": ["type", "linkType", "url"],
      "description": "Embed a multimedia resource (image, audio, video, or embeddable content via oEmbed)."
    },

    "Symbol": {
      "type": "object",
      "properties": {
        "type": { "const": "symbol" },
        "body": {
          "oneOf": [
            { "$ref": "#/definitions/Symbol" },
            {
              "type": "string",
              "description": "Any Unicode character, such as an emoji or special symbol."
            }
          ]
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body"],
      "description": "Displays a single symbol, such as an arrow, emoji, or any Unicode character. Use a predefined symbol from the list or provide any string for custom symbols or emojis."
    },

    "Input": {
      "type": "object",
      "properties": {
        "type": { "const": "input" },
        "solution": {
          "type": "string",
          "description": "The correct answer that user input will be checked against. Trailing whitespaces in the user's input will be ignored during comparison."
        },
        "length": {
          "type": "integer",
          "description": "Specifies the visible width of the input field in characters. Should be greater than or equal to the length of the solution. Optional."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "solution"],
      "description": "An inline text input field, typically used for fill-in-the-blank (GapText) quizzes. The 'solution' property defines the correct answer."
    },

    "Select": {
      "type": "object",
      "properties": {
        "type": { "const": "select" },
        "solution": {
          "$ref": "#/definitions/Solution",
          "description": "Defines the correct answer(s) for the dropdown. Can be a single integer (for one correct option), an array of integers (for multiple correct options), an empty array (if no selection is correct), or an array of booleans (where 'true' marks the correct options)."
        },
        "body": {
          "type": "array",
          "items": { "$ref": "#/definitions/Inlines" },
          "description": "The selectable options displayed in the dropdown. Each option can be any inline element, including text, images, formulas, HTML, etc."
        },
        "attr": { "type": "object" }
      },
      "required": ["type", "body", "solution"],
      "description": "Displays a dropdown menu with selectable options, typically used for fill-in-the-blank (GapText) quizzes. The 'body' property defines the list of options, and the 'solution' property specifies which option(s) are correct."
    },

    "Solution": {
      "description": "Defines the correct answer(s) for selection-based quizzes. Can be a single integer (for one correct option), an array of integers (for multiple correct options), an empty array (if no selection is correct), or an array of booleans (where 'true' marks the correct options).",
      "oneOf": [
        {
          "type": "integer",
          "description": "A single integer indicating the index of the correct option."
        },
        {
          "type": "array",
          "items": { "type": "integer" },
          "description": "An array of integers indicating the indices of all correct options. Use an empty array if no selection is correct."
        },
        {
          "type": "array",
          "items": { "type": "boolean" },
          "description": "An array of booleans, where each 'true' value marks the corresponding option as correct."
        }
      ]
    },

    "Symbol": {
      "type": "string",
      "enum": [
        "<-->",
        "<--",
        "-->",
        "<<-",
        "->>",
        "<->",
        ">->",
        "<-<",
        "->",
        "<-",
        "<~",
        "~>",
        "<==>",
        "==>",
        "<==",
        "<=>",
        "=>",
        "<=",
        ":-)",
        ";-)",
        ":-D",
        ":-O",
        ":-(",
        ":-|",
        ":-/",
        ":-\\",
        ":-P",
        ":-p",
        ";-P",
        ";-p",
        ":-*",
        ";-*",
        ":')",
        ":'(",
        ":'[",
        ":-[",
        ":-#",
        ":-X",
        ":-§"
      ],
      "description": "A predefined symbol, such as an arrow, emoticon, or other special character. Use one of these for common symbols, or provide any Unicode string in the 'body' property for custom symbols or emojis."
    },
    "Voice": {
      "type": "string",
      "enum": [
        "UK English Female",
        "UK English Male",
        "US English Female",
        "US English Male",
        "Afrikaans Male",
        "Albanian Male",
        "Arabic Female",
        "Arabic Male",
        "Armenian Male",
        "Australian Female",
        "Australian Male",
        "Bangla Bangladesh Female",
        "Bangla Bangladesh Male",
        "Bangla India Female",
        "Bangla India Male",
        "Bosnian Male",
        "Brazilian Portuguese Female",
        "Brazilian Portuguese Male",
        "Catalan Male",
        "Chinese Female",
        "Chinese Male",
        "Chinese (Hong Kong) Female",
        "Chinese (Hong Kong) Male",
        "Chinese Taiwan Female",
        "Chinese Taiwan Male",
        "Croatian Male",
        "Czech Female",
        "Czech Male",
        "Danish Female",
        "Danish Male",
        "Deutsch Female",
        "Deutsch Male",
        "Dutch Female",
        "Dutch Male",
        "Esperanto Male",
        "Estonian Male",
        "Filipino Female",
        "Finnish Female",
        "Finnish Male",
        "French Canadian Female",
        "French Canadian Male",
        "French Female",
        "French Male",
        "Greek Female",
        "Greek Male",
        "Hindi Female",
        "Hindi Male",
        "Hungarian Female",
        "Hungarian Male",
        "Icelandic Male",
        "Indonesian Female",
        "Indonesian Male",
        "Italian Female",
        "Italian Male",
        "Japanese Female",
        "Japanese Male",
        "Korean Female",
        "Korean Male",
        "Latin Female",
        "Latin Male",
        "Latvian Male",
        "Macedonian Male",
        "Moldavian Female",
        "Moldavian Male",
        "Montenegrin Male",
        "Nepali",
        "Norwegian Female",
        "Norwegian Male",
        "Polish Female",
        "Polish Male",
        "Portuguese Female",
        "Portuguese Male",
        "Romanian Female",
        "Romanian Male",
        "Russian Female",
        "Russian Male",
        "Serbian Male",
        "Serbo-Croatian Male",
        "Sinhala",
        "Slovak Female",
        "Slovak Male",
        "Spanish Female",
        "Spanish Male",
        "Spanish Latin American Female",
        "Spanish Latin American Male",
        "Swahili Male",
        "Swedish Female",
        "Swedish Male",
        "Tamil Female",
        "Tamil Male",
        "Thai Female",
        "Thai Male",
        "Turkish Female",
        "Turkish Male",
        "Ukrainian Female",
        "Vietnamese Female",
        "Vietnamese Male",
        "Welsh Male"
      ],
      "description": "TTS voice to use (optional)."
    }
  }
}
